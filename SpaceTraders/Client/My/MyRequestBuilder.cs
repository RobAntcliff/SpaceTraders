// <auto-generated/>
using Microsoft.Kiota.Abstractions;
using SpaceTraders.Client.My.Agent;
using SpaceTraders.Client.My.Contracts;
using SpaceTraders.Client.My.Ships;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using System;
namespace SpaceTraders.Client.My {
    /// <summary>
    /// Builds and executes requests for operations under \my
    /// </summary>
    public class MyRequestBuilder : BaseRequestBuilder {
        /// <summary>The agent property</summary>
        public AgentRequestBuilder Agent { get =>
            new AgentRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The contracts property</summary>
        public ContractsRequestBuilder Contracts { get =>
            new ContractsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>The ships property</summary>
        public ShipsRequestBuilder Ships { get =>
            new ShipsRequestBuilder(PathParameters, RequestAdapter);
        }
        /// <summary>
        /// Instantiates a new MyRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="pathParameters">Path parameters for the request</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public MyRequestBuilder(Dictionary<string, object> pathParameters, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/my", pathParameters) {
        }
        /// <summary>
        /// Instantiates a new MyRequestBuilder and sets the default values.
        /// </summary>
        /// <param name="rawUrl">The raw URL to use for the request builder.</param>
        /// <param name="requestAdapter">The request adapter to use to execute the requests.</param>
        public MyRequestBuilder(string rawUrl, IRequestAdapter requestAdapter) : base(requestAdapter, "{+baseurl}/my", rawUrl) {
        }
    }
}
